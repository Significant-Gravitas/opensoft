{"created": 1696131471.697804, "duration": 1.5316669940948486, "exitcode": 1, "root": "/Users/merwanehamadi/code/flywheel", "environment": {}, "summary": {"passed": 1, "failed": 1, "total": 2, "collected": 2}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": "pages/prompt_generator/__init__.py", "type": "Package"}, {"nodeid": "pages/prompt_generator/v1/__init__.py", "type": "Package"}, {"nodeid": "pages/prompt_generator/v1/tests/__init__.py", "type": "Package"}, {"nodeid": "pages/prompt_generator/v2/__init__.py", "type": "Package"}, {"nodeid": "pages/prompt_generator/v2/tests/__init__.py", "type": "Package"}]}, {"nodeid": "pages/prompt_generator/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "pages/prompt_generator/v1/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "pages/prompt_generator/v1/tests/test_backend.py", "outcome": "passed", "result": [{"nodeid": "pages/prompt_generator/v1/tests/test_backend.py::test_prompt_creation[http://127.0.0.1:8000/v1/b1]", "type": "Function", "lineno": 4}]}, {"nodeid": "pages/prompt_generator/v1/tests/__init__.py", "outcome": "passed", "result": [{"nodeid": "pages/prompt_generator/v1/tests/test_backend.py", "type": "Module"}]}, {"nodeid": "pages/prompt_generator/v2/__init__.py", "outcome": "passed", "result": []}, {"nodeid": "pages/prompt_generator/v2/tests/test_backend.py", "outcome": "passed", "result": [{"nodeid": "pages/prompt_generator/v2/tests/test_backend.py::test_prompt_creation[http://127.0.0.1:8000/v2/b1]", "type": "Function", "lineno": 4}]}, {"nodeid": "pages/prompt_generator/v2/tests/__init__.py", "outcome": "passed", "result": [{"nodeid": "pages/prompt_generator/v2/tests/test_backend.py", "type": "Module"}]}], "tests": [{"nodeid": "pages/prompt_generator/v1/tests/test_backend.py::test_prompt_creation[http://127.0.0.1:8000/v1/b1]", "lineno": 4, "outcome": "passed", "keywords": ["test_prompt_creation[http://127.0.0.1:8000/v1/b1]", "asyncio", "pytestmark", "http://127.0.0.1:8000/v1/b1", "test_backend.py", "pages/prompt_generator/v1/tests/__init__.py", "flywheel"], "setup": {"duration": 0.003297290997579694, "outcome": "passed"}, "call": {"duration": 0.6696004580007866, "outcome": "passed"}, "teardown": {"duration": 0.003861708006297704, "outcome": "passed"}}, {"nodeid": "pages/prompt_generator/v2/tests/test_backend.py::test_prompt_creation[http://127.0.0.1:8000/v2/b1]", "lineno": 4, "outcome": "failed", "keywords": ["test_prompt_creation[http://127.0.0.1:8000/v2/b1]", "asyncio", "pytestmark", "http://127.0.0.1:8000/v2/b1", "test_backend.py", "pages/prompt_generator/v2/tests/__init__.py", "flywheel"], "setup": {"duration": 0.0006170830019982532, "outcome": "passed"}, "call": {"duration": 0.732367416996567, "outcome": "failed", "crash": {"path": "/Users/merwanehamadi/code/flywheel/pages/prompt_generator/v2/tests/test_backend.py", "lineno": 16, "message": "assert 'AssertionError' in 'from sqlalchemy import create_engine\\nfrom sqlmodel import SQLModel\\n\\nDATABASE_URL = \"sqlite:///./test.db\"\\nengine =...ss or the tests in order for the test to pass, depending on whether the test makes sense or not.\\n    Assistant:\\n    '"}, "traceback": [{"path": "pages/prompt_generator/v2/tests/test_backend.py", "lineno": 16, "message": "AssertionError"}], "stdout": "No failure found\n", "longrepr": "client = <httpx.AsyncClient object at 0x10957f890>\n\n    @pytest.mark.asyncio\n    async def test_prompt_creation(client: AsyncClient):\n        response = await client.post(\n            \"/prompts\",\n            json={\"module_backend\": \"module_fixture/v1/b1\", \"goal\": \"pass_tests\"},\n        )\n    \n        # Check the response\n        assert response.status_code == 200\n        response_data = response.json()\n    \n>       assert \"AssertionError\" in response_data[\"prompt\"]\nE       assert 'AssertionError' in 'from sqlalchemy import create_engine\\nfrom sqlmodel import SQLModel\\n\\nDATABASE_URL = \"sqlite:///./test.db\"\\nengine =...ss or the tests in order for the test to pass, depending on whether the test makes sense or not.\\n    Assistant:\\n    '\n\npages/prompt_generator/v2/tests/test_backend.py:16: AssertionError"}, "teardown": {"duration": 0.013092457993479911, "outcome": "passed"}}]}